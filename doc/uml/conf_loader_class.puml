@startuml Zuul ConfigLoader

skinparam classAttributeIconSize 0
skinparam monochrome true
skinparam shadowing false
skinparam linetype ortho

class LocalAccumulator {
  +accumulator
  +source_context
  +stanza
  +conf
  +attr
  +extend()
  +catchErrors()
  +addError()
}

class ZuulSafeLoader {
  +zuul_node_types
  +zuul_context
  +zuul_stream
  +construct_mapping()
}

class PragmaParser {
  +schema
  +log
  +pcontext
  +fromYaml()
}

class ImageParser {
  +image
  +schema
  +log
  +pcontext
  +fromYaml()
}

class FlavorParser {
  +flavor
  +schema
  +log
  +pcontext
  +fromYaml()
}

class LabelParser {
  +label
  +schema
  +log
  +pcontext
  +fromYaml()
}

class SectionParser {
  +section
  +schema
  +log
  +pcontext
  +fromYaml()
}

class ProviderParser {
  +provider
  +schema
  +log
  +pcontext
  +fromYaml()
}

class NodeSetParser {
  +log
  +pcontext
  +anonymous
  +schema
  +anon_schema
  +getSchema()
  +fromYaml()
  +loadAlternatives()
  +loadNodeset()
}

class SecretParser {
  +log
  +pcontext
  +schema
  +getSchema()
  +fromYaml()
}

class JobParser {
  +ANSIBLE_ROLE_RE
  +zuul_role
  +galaxy_role
  +role
  +job_project
  +job_dependency
  +secret
  +semaphore
  +job_attributes
  +job_name
  +job
  +schema
  +simple_attributes
  +attr_control_job_attr_map
  +log
  +pcontext
  +fromYaml()
  -_getAttrControlJobAttr()
  -_makeZuulRole()
  -_makeImplicitRole()
}

class SemaphoreParser {
  +semaphore
  +schema
  +log
  +pcontext
  +fromYaml()
}

class QueueParser {
  +queue
  +schema
  +log
  +pcontext
  +fromYaml()
}

class ProjectTemplateParser {
  +project_template
  +schema
  +log
  +pcontext
  +fromYaml()
}

class ProjectParser {
  +project
  +schema
  +log
  +pcontext
  +fromYaml()
}

class PipelineParser {
  +pipeline
  +schema
  +log
  +pcontext
  +fromYaml()
  -_parseTrigger()
  -_parseReporter()
  -_parseManager()
}

class ConfigLoader {
  +log
  +connections
  +tenant_config
  +ansible_manager
  +tenant_parser
  +loadConfig()
  +loadTenantConfig()
  +loadSystemConfig()
  +loadLayout()
  -_getZuulYaml()
  -_readConfig()
  -_readZuulConfig()
  -_getJobDependencies()
  -_getProjectDependencies()
  -_resolveDependencies()
  -_loadDynamicConfig()
}

class ParseContext {
  +connections
  +tenant
  +layout
  +accumulator
  +ansible_manager
  +pragma_parser
  +image_parser
  +flavor_parser
  +label_parser
  +section_parser
  +provider_parser
  +nodeset_parser
  +secret_parser
  +job_parser
  +semaphore_parser
  +queue_parser
  +project_template_parser
  +project_parser
  +pipeline_parser
  +confAttr()
}

' 关系
ConfigLoader --> ParseContext : creates
ParseContext --> PragmaParser : contains
ParseContext --> ImageParser : contains
ParseContext --> FlavorParser : contains
ParseContext --> LabelParser : contains
ParseContext --> SectionParser : contains
ParseContext --> ProviderParser : contains
ParseContext --> NodeSetParser : contains
ParseContext --> SecretParser : contains
ParseContext --> JobParser : contains
ParseContext --> SemaphoreParser : contains
ParseContext --> QueueParser : contains
ParseContext --> ProjectTemplateParser : contains
ParseContext --> ProjectParser : contains
ParseContext --> PipelineParser : contains
ParseContext --> LocalAccumulator : uses

yaml.EncryptedLoader <|-- ZuulSafeLoader

note bottom of ConfigLoader
  主要配置加载类，负责读取和解析配置文件
end note

note bottom of ParseContext
  解析上下文，包含所有解析器实例和共享状态
end note

note right of LocalAccumulator
  错误收集器，用于收集和格式化解析错误
end note

@enduml